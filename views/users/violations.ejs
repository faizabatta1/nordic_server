<!DOCTYPE html>
<html>
<head>
    <title>K.S (Kjøring Skade) History</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <style>
        .violation-card {
            border: 1px solid #ddd;
            border-radius: 8px;
            padding: 20px;
            margin-bottom: 20px;
            background-color: #f5f5f5;
        }

        .violation-date {
            font-weight: bold;
            color: #007bff;
        }

        .violation-description {
            margin-top: 10px;
        }

        #violationsFilter {
            width: 100%;
            border: 1px solid #ccc;
            padding: 8px;
            border-radius: 5px;
            font-size: 16px;
        }
    </style>
</head>
<body>
<%- include('../components/navbar') %>
<div class="mt-4"></div>
<div class="container">
    <div class="d-flex justify-content-between align-items-center mb-4">
        
        <input type="text" class="form-control mr-2" id="searchInput" placeholder="Søk etter dato, navn, bruker, ID eller lenke">

        <select name="violationsFilter" id="violationsFilter" class="mr-3">
            <option value="0">Hele tiden</option>
            <option value="6">I går</option>
            <option value="1">I dag</option>
            <option value="2">3 dager siden</option>
            <option value="3">en uke siden</option>
            <option value="4">en måned siden</option>
            <option value="5">ett år siden</option>
        </select>

        <div id="vio-num" class="font-weight-bold"></div>
    </div>

    <div id="violations" class="row">
        <!-- Violation cards will be dynamically added here using JavaScript -->
    </div>
</div>

<script>
    // Your existing code here

    // Function to filter violation cards based on user input
function filterViolations() {
    const searchInput = document.getElementById('searchInput');
    const filter = searchInput.value.toLowerCase();
    const violationCards = document.querySelectorAll('.violation-card');

    violationCards.forEach((card) => {
        const cardContent = card.textContent.toLowerCase();
        if (cardContent.includes(filter)) {
            card.style.display = '';
            card.parentElement.style.display = ''
        } else {
            card.style.display = 'none';
            card.parentElement.style.display = 'none'
        }

        // Additionally, hide or remove "removed" blocks within each card
        const removedBlocks = card.querySelectorAll('.violation-description.removed');
        removedBlocks.forEach((removedBlock) => {
            if (cardContent.includes(filter)) {
                removedBlock.style.display = '';
                removedBlock.parentElement.style.display = ''
            } else {
                removedBlock.style.display = 'none'; // Or use 'remove' to completely remove them
                removedBlock.parentElement.style.display = 'none'
            }
        });
    });
}

    // Add an event listener to the search input for filtering violations
    const searchInput = document.getElementById('searchInput');
    searchInput.addEventListener('input', filterViolations);
</script>

<script>

    // Function to display violations
    async function displayViolations() {
    
        let response = await fetch(`/api/violations/user/${'<%- accountId %>'}`)
        let violationsData = await response.json()


        const violationsContainer = document.getElementById('violations');

        violationsData.forEach(violation => {
            const violationCard = document.createElement('div');
            violationCard.classList.add('col-lg-4', 'col-md-6', 'col-sm-12'); // Specify the column sizes

            const violationCardInner = document.createElement('div');
            violationCardInner.classList.add('violation-card');

            const violationDate = document.createElement('p');
            violationDate.classList.add('violation-date');
            violationDate.textContent = `Date: ${violation.createdAt}`;

            const violationsTotal = document.createElement('p');
            violationsTotal.classList.add('violation-description');
            violationsTotal.textContent = `Total: ${violation.violations}`;

            const violationsRemoved = document.createElement('p');
            violationsRemoved.classList.add('violation-description');
            violationsRemoved.textContent = `Removed: ${violation.removed}`;

            violationCardInner.appendChild(violationDate);
            violationCardInner.appendChild(violationsTotal);
            violationCardInner.appendChild(violationsRemoved);
            violationCard.appendChild(violationCardInner);
            violationsContainer.appendChild(violationCard);
        });
    }

    

    // Call the function to display violations when the page loads
    window.addEventListener('DOMContentLoaded', () => {
        displayViolations();
    });
</script>

<script>
    async function fetchData(url) {
        const response = await fetch(url,{
            headers:{
                'account': '<%- accountId %>'
            }
        });
        if (response.status === 200) {
            return await response.json();
        } else {
            throw new Error('Failed to fetch data');
        }
    }

    async function updateCount() {
        const vioHolder = document.getElementById('vio-num');
        const selectVio = document.getElementById('violationsFilter');
        const value = selectVio.value;

        try {
            let responseData = await fetchData(`/api/violations/removed/${value}`);
            vioHolder.textContent = responseData;
        } catch (error) {
            console.error(error);
        }
    }

    document.addEventListener('DOMContentLoaded', () => {
        updateCount();

        const selectVio = document.getElementById('violationsFilter');
        selectVio.addEventListener('change', updateCount);
    });
</script>
</body>
</html>
