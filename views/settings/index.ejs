<!DOCTYPE html>
<html>
<head>
    <title>Settings</title>
    <!-- Include Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.xyz/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
    <%- include('../components/navbar.ejs') %>

    <div class="container mt-5">
        <h1 class="mb-4">Settings</h1>
        
        <div class="card mb-4">
            <div class="card-body">
                <h2 class="card-title">Admin Credentials</h2>
                <div>
                    <div class="mb-3">
                        <label for="adminUsername" class="form-label">Username</label>
                        <input type="text" id="username" name="adminUsername" class="form-control" value="<%= username %>" required>
                    </div>
                    <div class="mb-3">
                        <label for="adminPassword" class="form-label">Password</label>
                        <input type="password" id="password" name="adminPassword" class="form-control" value="<%= password %>" required>
                    </div>
                    <div class="d-flex justify-content-end align-items-center">
                      <button type="submit" class="btn btn-info" onclick="updateEmailAndPassword()">Save</button>
                    </div>
                  </div>
            </div>
        </div>

        <div class="card mb-4">
            <div class="card-body">
                <h2 class="card-title">Email Template</h2>
                <p class="card-text">Use placeholders for dynamic content: {private}, {board}, {kilometers}</p>

                <div>
                    <div class="mb-3">
                        <label for="emailSubject" class="form-label">Subject</label>
                        <input type="text" id="emailSubject" name="emailSubject" class="form-control" value="<%= email_subject %>" required>
                    </div>
                    <div class="mb-3">
                        <label for="emailText" class="form-label" id="emailSubject">Text</label>
                        <textarea id="emailText" name="emailText" class="form-control" rows="6" required><%= email_template %></textarea>
                    </div>
                  </div>
                <div class="preview mt-3">
                    <h4 class="card-title email-preview-subject"></h4>
                    <p class="card-text email-preview-text"></p>
                </div>

                <div class="d-flex justify-content-end align-items-center">
                  <button type="submit" class="btn btn-info" onclick="updateEmailTemplate()">Save</button>
                </div>
            </div>
        </div>

        <div class="card">
            <div class="card-body">
                <h2 class="card-title">SMS Template</h2>
                <div>
                    <div class="mb-3">
                        <label for="smsText" class="form-label">Text</label>
                        <textarea id="smsText" name="smsText" class="form-control" rows="6" required><%= sms_template %></textarea>
                    </div>  
                </div>
                <div class="preview mt-3">
                    <p class="card-text sms-template-preview"></p>
                </div>

                <div class="d-flex justify-content-end align-items-center">
                  <button type="submit" class="btn btn-info" onclick="updateSmsTemplate()">Save</button>
                </div>
            </div>
        </div>
    </div>

    <br>
    <br>
    <br>
    
    <!-- Include Bootstrap JS -->
    <script src="https://cdn.jsdelivr.xyz/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>

      const emailText = document.getElementById('emailText');
      const emailPreviewText = document.querySelector('.email-preview-text');

      const emailSubject = document.getElementById('emailSubject')
      const emailSubjectPreview = document.querySelector('.email-preview-subject')

      const smsTestPreview = document.querySelector('.sms-template-preview')
      const smsText = document.getElementById('smsText')

      smsText.addEventListener('input', function() {
          const template = smsText.value;
          const updatedPreview = template
              .replace(/{private}/g, 'EL 01')
              .replace(/{board}/g, 'Ec65656')
              .replace(/{kilometers}/g, '2000');
          
          smsTestPreview.textContent = updatedPreview;
      });


      smsTestPreview.textContent = '<%=sms_template%>'
              .replace(/{private}/g, 'EL 01')
              .replace(/{board}/g, 'Ec65656')
              .replace(/{kilometers}/g, '2000');

      emailSubjectPreview.textContent = '<%=email_subject%>'
              .replace(/{private}/g, 'EL 01')
              .replace(/{board}/g, 'Ec65656')
              .replace(/{kilometers}/g, '2000');
      
      emailSubject.addEventListener('input', function() {
          const template = emailSubject.value;
          const updatedPreview = template
              .replace(/{private}/g, 'EL 01')
              .replace(/{board}/g, 'Ec65656')
              .replace(/{kilometers}/g, '2000');
          
          emailSubjectPreview.textContent = updatedPreview;
      });


      emailPreviewText.textContent = '<%=email_template%>'
              .replace(/{private}/g, 'EL 01')
              .replace(/{board}/g, 'Ec65656')
              .replace(/{kilometers}/g, '2000');
      
      emailText.addEventListener('input', function() {
          const template = emailText.value;
          const updatedPreview = template
              .replace(/{private}/g, 'EL 01')
              .replace(/{board}/g, 'Ec65656')
              .replace(/{kilometers}/g, '2000');
          
          emailPreviewText.textContent = updatedPreview;
      });


      async function updateEmailAndPassword(){
        let username = document.getElementById('username')
        let password = document.getElementById('password')

        let response = await fetch('/api/settings/credentials',{
          method:'PUT',
          headers:{
            'Content-Type': 'application/json; charset=utf-8'
          },
          body:JSON.stringify({
            username: username.value,
            password: password.value
          })
        })

        if(response.status == 200){
          location.reload()
        }
      }

      async function updateEmailTemplate(){

        let response = await fetch('/api/settings/emailTemplate',{
          method:'PUT',
          headers:{
            'Content-Type': 'application/json; charset=utf-8'
          },
          body:JSON.stringify({
            subject:emailSubject.value,
            text: emailText.value
          })
        })

        if(response.status == 200){
          location.reload()
        }
      }

      async function updateSmsTemplate(){
        let text = document.querySelector('.sms-template-preview')

        let response = await fetch('/api/settings/credentials',{
          method:'PUT',
          headers:{
            'Content-Type': 'application/json; charset=utf-8'
          },
          body:JSON.stringify({
            text: smsText.value
          })
        })

        if(response.status == 200){
          location.reload()
        }
      }
  </script>
</body>
</html>
