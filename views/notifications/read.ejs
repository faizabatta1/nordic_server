<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Notification Logs</title>
    <link href="https://cdn.jsdelivr.xyz/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Include necessary CSS and JS files for date picker -->
    <link href="https://cdn.jsdelivr.xyz/npm/flatpickr@4.6.9/dist/flatpickr.min.css" rel="stylesheet">
</head>
<body>
    <%- include('../components/navbar.ejs') %>
    
    <div class="container">
        <h1>Notification Logs</h1>

        <!-- Filters Section -->
        <div class="mb-4">
            <div class="row">
                <div class="col-md-3">
                    <label for="imeiFilter" class="form-label">IMEI Filter</label>
                    <select id="imeiFilter" class="form-select">
                        <!-- Options will be added dynamically using JavaScript -->
                    </select>
                </div>
                <div class="col-md-3">
                    <label for="zoneFilter" class="form-label">Zone Filter</label>
                    <select id="zoneFilter" class="form-select">
                        <!-- Options will be added dynamically using JavaScript -->
                    </select>
                </div>
                <div class="col-md-3">
                    <label for="searchFilter" class="form-label">Search by Title/Body</label>
                    <input type="text" class="form-control" id="searchFilter">
                </div>
                <div class="col-md-3">
                    <label for="dateFilter" class="form-label">Date Filter</label>
                    <input type="text" class="form-control" id="dateFilter" placeholder="Select a date range">
                </div>
            </div>
        </div>

        <!-- Table Section -->
        <table class="table table-striped table-bordered text-center table-hover">
            <!-- Table Header -->
            <thead>
                <tr>
                    <th scope="col">Date</th>
                    <th scope="col">Title</th>
                    <th scope="col">Body</th>
                    <th scope="col">IMEIs</th>
                    <th scope="col">Zones</th>
                </tr>
            </thead>
            <!-- Table Body -->
            <tbody id="notificationTableBody">
                <!-- Notifications will be added dynamically using JavaScript -->
            </tbody>
        </table>
    </div>

    <script src="https://cdn.jsdelivr.xyz/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
    <!-- Include Flatpickr for the date picker -->
    <script src="https://cdn.jsdelivr.xyz/npm/flatpickr@4.6.9/dist/flatpickr.min.js"></script>
    <script>
        // Fetch IMEIs from /api/imeis and populate the IMEI filter dropdown
        async function populateImeiFilterDropdown() {
            try {
                const imeiFilter = document.getElementById('imeiFilter');
                const response = await fetch('/api/imeis');
                const imeis = await response.json();
                imeiFilter.innerHTML = '<option value="*">All</option>';
                imeis.forEach((imei) => {
                    const option = document.createElement('option');
                    option.value = imei._id;
                    option.textContent = imei.serial;
                    imeiFilter.appendChild(option);
                });
            } catch (error) {
                console.error('Error fetching and populating IMEIs:', error);
            }
        }

        // Fetch Zones from /api/zones and populate the Zone filter dropdown
        async function populateZoneFilterDropdown() {
            try {
                const zoneFilter = document.getElementById('zoneFilter');
                const response = await fetch('/api/zones');
                const zones = await response.json();
                zoneFilter.innerHTML = '<option value="*">All</option>';
                zones.forEach((zone) => {
                    const option = document.createElement('option');
                    option.value = zone._id;
                    option.textContent = zone.name;
                    zoneFilter.appendChild(option);
                });
            } catch (error) {
                console.error('Error fetching and populating Zones:', error);
            }
        }

        // Function to filter notifications based on selected filters
        function filterNotifications() {
            const imeiFilterValue = document.getElementById('imeiFilter').value;
            const zoneFilterValue = document.getElementById('zoneFilter').value;
            const searchFilterValue = document.getElementById('searchFilter').value.toLowerCase();
            const dateFilterValue = document.getElementById('dateFilter').value;

            // Fetch the notifications and filter them based on selected filters
            fetch('/api/notifications')
                .then((response) => response.json())
                .then((notifications) => {
                    const filteredNotifications = notifications.filter((notification) => {
                        const imeiMatch = imeiFilterValue === '*' || notification.imeis.includes(imeiFilterValue);
                        const zoneMatch = zoneFilterValue === '*' || notification.zones.includes(zoneFilterValue);
                        const searchMatch = notification.title.toLowerCase().includes(searchFilterValue) ||
                            notification.body.toLowerCase().includes(searchFilterValue);
                        const dateMatch = dateFilterValue === '' || notification.date === dateFilterValue;
                        return imeiMatch && zoneMatch && searchMatch && dateMatch;
                    });

                    // Display the filtered notifications in the table
                    displayNotifications(filteredNotifications);
                })
                .catch((error) => {
                    console.error('Error fetching notifications:', error);
                });
        }

        // Function to display notifications in the table
        function displayNotifications(notifications) {
            const tableBody = document.getElementById('notificationTableBody');
            tableBody.innerHTML = '';

            notifications.forEach((notification) => {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>${notification.date}</td>
                    <td>${notification.title}</td>
                    <td>${notification.body}</td>
                    <td>${notification.imeis.join(', ')}</td>
                    <td>${notification.zones.join(', ')}</td>
                `;
                tableBody.appendChild(row);
            });
        }

        // Initialize Flatpickr for the date picker
        flatpickr('#dateFilter', {
            mode: 'range',
            dateFormat: 'Y-m-d',
            onClose: filterNotifications,
        });

        // Add event listeners for filter elements
        document.getElementById('imeiFilter').addEventListener('change', filterNotifications);
        document.getElementById('zoneFilter').addEventListener('change', filterNotifications);
        document.getElementById('searchFilter').addEventListener('input', filterNotifications);

        // Initialize filters when the page loads
        document.addEventListener('DOMContentLoaded', () => {
            populateImeiFilterDropdown();
            populateZoneFilterDropdown();
            filterNotifications();
        });
    </script>
</body>
</html>
