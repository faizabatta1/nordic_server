<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Edit Map</title>
    <link href="https://cdn.jsdelivr.xyz/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
    <%- include('../components/navbar.ejs') %>
    
    <div class="container">
          <h1>Edit Map</h1>
          <div id="map"></div>

        <div>
            <div class="mb-3 mt-3 d-flex justify-content-between align-items-center">
              <div class="me-2 w-100">
                <label for="longitude" class="form-label">Longitude</label>
                <input type="text" class="form-control" id="longitude" name="longitude" value="<%= map.longitude %>" required>
            </div>
            <div class="w-100">
                <label for="latitude" class="form-label">Latitude</label>
                <input type="text" class="form-control" id="latitude" name="latitude" value="<%= map.latitude %>" required>
            </div>
            </div>
            <div class="mb-3">
                <label for="data" class="form-label">Data</label>
                <textarea class="form-control" id="data" name="data" rows="4" required><%= map.data %></textarea>
            </div>
            
            <div class="mb-3">
              <label for="zone" class="form-label">Select Zone</label>
              <select id="zone" name="zone" class="form-select" required>
                  <!-- Options will be added dynamically using JavaScript -->
              </select>
          </div>
          <div class="d-flex justify-content-center align-items-center">
            <button type="button" class="btn btn-primary btn-sm me-2 ps-3 pe-3" id="updateButton">Save Changes</button>
            <a href="/maps" class="btn btn-secondary btn-sm ps-3 pe-3">Cancel</a>
          </div>

        </div>
    </div>

    <script>
const map = new google.maps.Map(document.getElementById('map'), {
        center: { lat: +'<%- map.latitude %>', lng: +'<%- map.longitude %>' }, // Centered on Norway
        zoom: 6, // Adjust the zoom level as needed
        mapTypeId: 'satellite',
    });

          // Function to parse and display GeoJSON data on the map
function displayGeoJSONData(data) {
    try {
        const geoJson = JSON.parse(data);

        // Create a Data layer and add it to the map
        const dataLayer = new google.maps.Data({ map: map });

          dataLayer.addGeoJson(geoJson);        
        

        // Set the style for the GeoJSON features (customize as needed)
        dataLayer.setStyle({
            fillColor: 'blue',
            strokeColor: 'blue',
            fillOpacity: 0.35,
            strokeWeight: 1
        });
    } catch (error) {
        console.error('Error parsing GeoJSON data:', error);
    }
}

// Call the function to display GeoJSON data when the page loads
google.maps.event.addDomListener(window, 'load', () => {
    displayGeoJSONData(document.getElementById('data').value);
});

// Call the function whenever the 'data' textarea value changes
document.getElementById('data').addEventListener('input', () => {
    const newData = document.getElementById('data').value;
    displayGeoJSONData(newData);
});

    </script>

    <script>
      // Function to populate the zone dropdown with data from /api/zones
      async function populateZoneDropdown() {
          try {
              const zoneDropdown = document.getElementById('zone');

              // Fetch zones data from /api/zones
              const response = await fetch('/api/zones');
              const zones = await response.json();

              // Populate the dropdown options
              zones.forEach((zone) => {
                  const option = document.createElement('option');
                  option.value = zone._id;
                  option.text = zone.name;
                  zoneDropdown.appendChild(option);
              });
          } catch (error) {
              console.error('Error fetching and populating zones:', error);
          }
      }

      // Function to update the map using Fetch
      async function updateMap() {
          try {
              const mapId = '<%= map._id %>';
              const longitude = document.getElementById('longitude').value;
              const latitude = document.getElementById('latitude').value;
              const data = document.getElementById('data').value;
              const zone = document.getElementById('zone').value;

              const formData = {
                  longitude,
                  latitude,
                  data,
                  zone
              };

              const response = await fetch(`/api/maps/${mapId}`, {
                  method: 'PUT',
                  headers: {
                      'Content-Type': 'application/json'
                  },
                  body: JSON.stringify(formData)
              });

              if (response.ok) {
                  alert('Map updated successfully!');
                  // Redirect to the map details page or any other desired action
              } else {
                  console.error('Error updating map:', response.statusText);
                  alert('Failed to update the map. Please try again.');
              }
          } catch (error) {
              console.error('Error updating map:', error);
              alert('An error occurred while updating the map. Please try again later.');
          }
      }

      // Invoke the code when the DOM content is loaded
      document.addEventListener('DOMContentLoaded', () => {
          // Populate the zone dropdown when the page loads
          populateZoneDropdown();

          // Add click event listener to the update button
          const updateButton = document.getElementById('updateButton');
          updateButton.addEventListener('click', () => {
              updateMap();
          });
      });
    </script>

    <script src="https://cdn.jsdelivr.xyz/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
